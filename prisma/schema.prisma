// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}


model Images{
  id String @id @default(cuid())
  name String
  url String
  createdAt DateTime @default(now())
}


model Work{
  id            String          @id @default(cuid())
  title String
  slug String @unique()
  description String
  images String[]
  githubLink String
  liveLink String
  categories WorkCategory[] 
  frameworks Framework[]
  createdAt DateTime @default(now())
}


model WorkCategory{
  id            String          @id @default(cuid())
  slug String @unique
  title String
  works Work[]
  color String 
  createdAt DateTime @default(now())
}

model Framework{
  id            String          @id @default(cuid())
  slug String @unique
  title String @unique
  image String
  works Work[]
  createdAt DateTime @default(now())
}



model Blog{
  id            String          @id @default(cuid())
  title String
  slug String @unique()
  description String
  image String
  body String 
  published Boolean @default(true)
  categories BlogCategory[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogCategory{
  id String @id @default(cuid())
  title String 
  image String
  slug String @unique
  color String
  blogs Blog[]
  createdAt DateTime @default(now())

}